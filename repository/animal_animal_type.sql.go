// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: animal_animal_type.sql

package repository

import (
	"context"

	"github.com/lib/pq"
)

const addAnimalAnimalType = `-- name: AddAnimalAnimalType :exec
INSERT INTO animals_animal_types(animal_id, animal_type_id)
    VALUES ($1, $2)
`

type AddAnimalAnimalTypeParams struct {
	AnimalID     int64
	AnimalTypeID int64
}

func (q *Queries) AddAnimalAnimalType(ctx context.Context, arg AddAnimalAnimalTypeParams) error {
	_, err := q.db.ExecContext(ctx, addAnimalAnimalType, arg.AnimalID, arg.AnimalTypeID)
	return err
}

const createAnimalAnimalType = `-- name: CreateAnimalAnimalType :exec
INSERT INTO animals_animal_types(animal_id, animal_type_id)
SELECT
    $1,
    unnest($2::bigint[])
`

type CreateAnimalAnimalTypeParams struct {
	AnimalID int64
	Column2  []int64
}

func (q *Queries) CreateAnimalAnimalType(ctx context.Context, arg CreateAnimalAnimalTypeParams) error {
	_, err := q.db.ExecContext(ctx, createAnimalAnimalType, arg.AnimalID, pq.Array(arg.Column2))
	return err
}

const deleteAnimalAnimalType = `-- name: DeleteAnimalAnimalType :exec
DELETE FROM animals_animal_types
WHERE animal_id = $1
    AND animal_type_id = $2
`

type DeleteAnimalAnimalTypeParams struct {
	AnimalID     int64
	AnimalTypeID int64
}

func (q *Queries) DeleteAnimalAnimalType(ctx context.Context, arg DeleteAnimalAnimalTypeParams) error {
	_, err := q.db.ExecContext(ctx, deleteAnimalAnimalType, arg.AnimalID, arg.AnimalTypeID)
	return err
}

const updateAnimalAnimalType = `-- name: UpdateAnimalAnimalType :exec
UPDATE
    animals_animal_types
SET
    animal_type_id = $1
WHERE
    animal_id = $2
    AND animal_type_id = $3
`

type UpdateAnimalAnimalTypeParams struct {
	AnimalTypeID   int64
	AnimalID       int64
	AnimalTypeID_2 int64
}

func (q *Queries) UpdateAnimalAnimalType(ctx context.Context, arg UpdateAnimalAnimalTypeParams) error {
	_, err := q.db.ExecContext(ctx, updateAnimalAnimalType, arg.AnimalTypeID, arg.AnimalID, arg.AnimalTypeID_2)
	return err
}
